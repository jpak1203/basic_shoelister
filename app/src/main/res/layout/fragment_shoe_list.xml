<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>
        <variable
            name="shoeListViewModel"
            type="com.udacity.shoestore.models.ShoesViewModel" />
    </data>

    <!-- I used ConstraintLayout here to anchor the ScrollView to the top, right, and left.
    This was because I wanted only a small margin on the left and top so that it was easier to read -->

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/shoelist_layout"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".screens.shoeList.ShoeListFragment">

        <ScrollView
            android:id="@+id/shoelist_scroll_view"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_marginStart="16dp"
            android:layout_marginTop="16dp"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent">

            <!-- I used LinearLayout here since each shoe listing can lie on top of each other. There was no advanced constraints needed -->

            <LinearLayout
                android:id="@+id/shoelist_inner_layout"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical">

            </LinearLayout>
        </ScrollView>

        <com.google.android.material.floatingactionbutton.FloatingActionButton
            android:id="@+id/add_shoe_button"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_marginEnd="16dp"
            android:layout_marginBottom="16dp"
            android:clickable="true"
            android:src="@drawable/ic_add"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent" />

    </androidx.constraintlayout.widget.ConstraintLayout>

</layout>